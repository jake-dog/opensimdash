package codemasters

import (
	"bytes"
	"encoding/binary"
	"testing"
)

var data = []byte{
	22, 168, 148, 66, 80, 138, 70, 62, 20, 221, 14, 65, 53, 39, 129, 63, 160, 220,
	254, 65, 114, 108, 34, 67, 146, 3, 119, 195, 200, 149, 58, 66, 151, 26, 16,
	66, 148, 192, 54, 63, 244, 250, 236, 193, 200, 107, 17, 63, 243, 226, 169, 60,
	146, 158, 82, 63, 182, 136, 82, 63, 172, 38, 194, 60, 214, 131, 17, 191, 175,
	18, 174, 65, 136, 163, 133, 192, 52, 236, 181, 63, 187, 166, 224, 193, 165,
	141, 199, 194, 89, 46, 23, 67, 35, 232, 93, 194, 152, 25, 149, 66, 30, 224,
	71, 66, 31, 224, 71, 66, 30, 224, 71, 66, 30, 224, 71, 66, 0, 0, 128, 63, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 64, 196, 99, 31, 191, 34, 80, 18,
	63, 0, 0, 128, 63, 179, 245, 59, 68, 0, 0, 128, 63, 0, 0, 0, 64, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 146, 132, 66, 164, 169, 159, 66,
	228, 244, 131, 66, 124, 197, 159, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 63, 0, 0, 64, 64, 109, 199, 119, 68, 15, 175, 53, 66, 61,
	154, 90, 68, 132, 112, 81, 67, 0, 0, 192, 64}

func BenchmarkDirtRally(b *testing.B) {
	d := &DirtPacket{}
	b.ResetTimer()
	for n := 0; n < b.N; n++ {
		d.Decode(data)
	}
}

func BenchmarkDirtRallySlow(b *testing.B) {
	d := &DirtPacket{}
	buf := bytes.NewBuffer(data)
	b.ResetTimer()
	for n := 0; n < b.N; n++ {
		binary.Read(buf, binary.LittleEndian, &d)
		buf.Reset()
	}
}
